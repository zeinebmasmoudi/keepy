#!/bin/bash
echo "======================================================"
echo "üîê GitHub Credentials Storage in Jenkins - Started"
echo "======================================================"
# Check if required parameters are provided
if [ -z "${GITHUB_USERNAME}" ] || [ -z "${GITHUB_TOKEN}" ]; then
    echo "‚ùå ERROR: GITHUB_USERNAME and GITHUB_TOKEN are required"
    exit 1
fi
# Fixed values for Jenkins connection and credential storage
JENKINS_USER="zeinebmasmoudi"
JENKINS_TOKEN="1136578aacf8db4375522a0f9d0037b700"
JENKINS_URL="http://localhost:8080"
CREDENTIAL_STORE="system"
DOMAIN="_"
echo "‚ñ∂Ô∏è Processing credentials for user: ${GITHUB_USERNAME}"
# Create unique credential ID and description
CREDENTIAL_ID="${GITHUB_USERNAME}"
CREDENTIAL_DESC="GitHub credential for ${GITHUB_USERNAME}"
# Test Jenkins API access first
echo "‚ñ∂Ô∏è Testing Jenkins API access..."
API_TEST=$(curl -s -o /tmp/api_test.txt -w "%{http_code}" \
  -u "${JENKINS_USER}:${JENKINS_TOKEN}" \
  "${JENKINS_URL}/api/json")
if [ "${API_TEST}" != "200" ]; then
    echo "‚ùå Jenkins API authentication failed (HTTP ${API_TEST})"
    cat /tmp/api_test.txt
    exit 1
fi
echo "‚úÖ Jenkins API authentication successful"
# Get CRUMB for CSRF protection
echo "‚ñ∂Ô∏è Getting CRUMB for CSRF protection..."
JENKINS_CRUMB=$(curl -s "${JENKINS_URL}/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,\":\",//crumb)" \
  -u "${JENKINS_USER}:${JENKINS_TOKEN}")
if [ -z "${JENKINS_CRUMB}" ]; then
    echo "‚ö†Ô∏è WARNING: Could not get CRUMB (CSRF might be disabled)"
else
    echo "‚úÖ CRUMB obtained successfully"
    # Extract CRUMB header and value for proper formatting
    CRUMB_HEADER_NAME=$(echo "${JENKINS_CRUMB}" | cut -d':' -f1)
    CRUMB_VALUE=$(echo "${JENKINS_CRUMB}" | cut -d':' -f2)
    JENKINS_CRUMB="${CRUMB_HEADER_NAME}: ${CRUMB_VALUE}"
fi
# Create the credential JSON payload
JSON_PAYLOAD=$(cat <<EOF
{
  "": "0",
  "credentials": {
    "scope": "GLOBAL",
    "id": "${CREDENTIAL_ID}",
    "username": "${GITHUB_USERNAME}",
    "password": "${GITHUB_TOKEN}",
    "description": "${CREDENTIAL_DESC}",
    "\$class": "com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl"
  }
}
EOF
)
# Make API call to create credential with improved options
echo "‚ñ∂Ô∏è Creating credential in Jenkins..."
echo "‚ñ∂Ô∏è Using improved API call with redirection support..."
RESULT=$(curl -s -L -o /tmp/credential_result.txt -w "%{http_code}" -X POST \
  -H "${JENKINS_CRUMB}" \
  -u "${JENKINS_USER}:${JENKINS_TOKEN}" \
  --data-urlencode "json=${JSON_PAYLOAD}" \
  "${JENKINS_URL}/credentials/store/${CREDENTIAL_STORE}/domain/${DOMAIN}/createCredentials")

# Check result with more detailed error handling
if [ "${RESULT}" = "200" ] || [ "${RESULT}" = "201" ] || [ "${RESULT}" = "302" -a -f "/tmp/credential_result.txt" -a ! -s "/tmp/credential_result.txt" ]; then
    echo "‚úÖ Credential created successfully (HTTP ${RESULT})"
    
    # Verify that credential was actually created
    echo "‚ñ∂Ô∏è Verifying credential creation..."
    VERIFY=$(curl -s -L -o /tmp/verify_result.txt -w "%{http_code}" \
      -u "${JENKINS_USER}:${JENKINS_TOKEN}" \
      "${JENKINS_URL}/credentials/store/${CREDENTIAL_STORE}/domain/${DOMAIN}/credential/${CREDENTIAL_ID}/api/json")
    
    if [ "${VERIFY}" = "200" ]; then
        echo "‚úÖ Credential verified successfully"
    else
        echo "‚ö†Ô∏è Credential may have been created but verification returned HTTP ${VERIFY}"
        echo "‚ñ∂Ô∏è If problems persist, try the alternate REST API method below"
    fi
else
    echo "‚ùå Failed to create credential (HTTP ${RESULT})"
    echo "‚ñ∂Ô∏è Response content:"
    cat /tmp/credential_result.txt
    
    # Try alternative REST API approach
    echo "‚ñ∂Ô∏è Attempting alternate REST API method..."
    REST_RESULT=$(curl -s -L -o /tmp/rest_result.txt -w "%{http_code}" -X POST \
      -H "Content-Type: application/json" \
      -H "${JENKINS_CRUMB}" \
      -u "${JENKINS_USER}:${JENKINS_TOKEN}" \
      -d "{\"credentials\":{\"scope\":\"GLOBAL\",\"id\":\"${CREDENTIAL_ID}\",\"username\":\"${GITHUB_USERNAME}\",\"password\":\"${GITHUB_TOKEN}\",\"description\":\"${CREDENTIAL_DESC}\",\"\$class\":\"com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl\"}}" \
      "${JENKINS_URL}/credentials/store/${CREDENTIAL_STORE}/domain/${DOMAIN}/createCredentials")
    
    if [ "${REST_RESULT}" = "200" ] || [ "${REST_RESULT}" = "201" ]; then
        echo "‚úÖ Credential created successfully using alternate method"
    else
        echo "‚ùå Both methods failed. Enabling debug mode for detailed logs..."
        echo "‚ñ∂Ô∏è Debug output:"
        curl -v -L -X POST \
          -H "${JENKINS_CRUMB}" \
          -u "${JENKINS_USER}:${JENKINS_TOKEN}" \
          --data-urlencode "json=${JSON_PAYLOAD}" \
          "${JENKINS_URL}/credentials/store/${CREDENTIAL_STORE}/domain/${DOMAIN}/createCredentials"
        exit 1
    fi
fi

echo "======================================================"
echo "‚úÖ GitHub Credentials Storage Process - Completed"
echo "======================================================"
